[tool.poetry]
name = "infinity_emb"
version = "0.0.25"
description = "Infinity is a high-throughput, low-latency REST API for serving vector embeddings, supporting a wide range of sentence-transformer models and frameworks."
authors = ["michaelfeil <me@michaelfeil.eu>"]
license = "MIT"
readme = "README.md"
packages = [{include = "infinity_emb"}]

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
# basics
numpy = ">=1.20.0"
pydantic = ">=2.4.0,<3"
# logging
rich = {version = "^13", optional=true}
# webserver-only
fastapi = {version = "^0.103.2", optional=true}
orjson = {version = ">=3.9.8,<4", optional=true} 
prometheus-fastapi-instrumentator = {version = "^6.1.0", optional=true}
uvicorn = {extras = ["standard"], version = "^0.23.2", optional=true}
typer = {extras = ["all"], version = "^0.9.0", optional=true}
# backend
torch = {version = "2.2.0", source = "pypi", optional=true}
sentence-transformers = {version = "^2.3.0", optional=true} 
ctranslate2 = {version = "^4.0.0", optional=true}
optimum = {version = ">=1.16.2", optional=true, extras=["onnxruntime"]}
fastembed = {version = ">=0.2.1", optional=true} 
hf_transfer = {version=">=0.1.5", optional=true}
# cache
diskcache = {version = "*", optional=true}
# gpu
onnxruntime-gpu = {version = "*", optional=true} 
tensorrt = {version = "^8.6.1", optional=true}

[tool.poetry.scripts]
infinity_emb = "infinity_emb.infinity_server:cli"

[tool.poetry.group.test.dependencies]
pytest = "^7.0.0"
pytest-mock = "*"
httpx  = "*"
asgi_lifespan = "*"
anyio = "*"
trio = "*"
coverage = {extras = ["toml"], version = "^7.3.2"}
mypy = "^1.5.1"

[tool.poetry.group.codespell.dependencies]
codespell = "^2.2.0"

[tool.poetry.group.lint.dependencies]
ruff = "^0.2.0"
types-toml = "^0.10.8.1"
types-redis = "^4.3.21.6"
types-pytz = "^2023.3.0.0"
black = "^23.1.0"
types-chardet = "^5.0.4.6"
mypy-protobuf = "^3.0.0"

[tool.poetry.extras]
ct2=["ctranslate2","sentence-transformers","torch"]
optimum=["optimum"]
fastembed=["fastembed"]
torch=["sentence-transformers","torch","hf_transfer"]
logging=["rich"]
cache=["diskcache"]
server=["fastapi", "pydantic", "orjson", "prometheus-fastapi-instrumentator", "uvicorn", "typer","rich"]
all=["ctranslate2", "fastapi", "fastembed", "optimum", "orjson", "prometheus-fastapi-instrumentator", "pydantic", "rich", "sentence-transformers", "torch", "typer", "uvicorn","diskcache"]
# non-default gpu
tensorrt=["tensorrt"]
onnxruntime-gpu=["onnxruntime-gpu"]

[tool.pytest.ini_options]
markers = [
    "performance: tests that measure performance (deselect with '-m \"not performance\"')",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
